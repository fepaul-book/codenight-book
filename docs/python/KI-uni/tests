import unittest

class Test_check_win(unittest.TestCase):

    game = TicTacToe(None, None)    
    
    blanko = 
        [
        ['_','_','_'],
        ['_','_','_'],
        ['_','_','_']
        ]

    erste_reihe = 
        [
        ['X','X','X']
        ['_','_','_'],
        ['_','_','_']
        ]

    zweite_reihe = 
        [
        ['_','_','_'],
        ['X','X','X'],
        ['_','_','_']
        ]

    dritte_reihe = 
        [
        ['_','_','_'],
        ['_','_','_'],
        ['X','X','X']
        ]

    erste_spalte = 
        [
        ['X','_','_'],
        ['X','_','_'],
        ['X','_','_']
        ]

    zweite_spalte = 
        [
        ['_','X','_'],
        ['_','X','_'],
        ['_','X','_']
        ]

    dritte_spalte =
        [
        ['_','_','X'],
        ['_','_','X'],
        ['_','_','X']
        ]

    erste_diagonale =
        [
        ['X','_','_'],
        ['_','X','_'],
        ['_','_','X']
        ]

    zweite_diagonale =
        [
        ['_','_','X'],
        ['_','X','_'],
        ['X','_','_']
        ]

    not_won_0 = 
        [
        ['X','_','_'],
        ['X','X','_'],
        ['_','_','_']
        ]

    not_won_1 = 
        [
        ['X','X','_'],
        ['_','_','_'],
        ['_','_','_']
        ]

    not_won_2 = 
        [
        ['_','_','_'],
        ['X','_','_'],
        ['X','_','_']
        ]

    not_won_3 = 
        [
        ['_','_','_'],
        ['_','X','_'],
        ['X','_','_']
        ]

    won_other_symbol = 
        [
        ['O','_','_'],
        ['_','O','_'],
        ['_','_','O']
        ]

    win_fields = [erste_reihe, zweite_reihe, dritte_reihe, 
                      erste_spalte, zweite_spalte, dritte_spalte, 
                      erste_diagonale, zweite_diagonale, won_other_symbol]
            
    loose_fields = [not_won_0,not_won_1,not_won_2,not_won_3]

    def test_win(self, win_fields):
        for new_field in win_fields:
            game.field = new_field        
            self.assertEqual(game._check_win('X'),True)
    
    def test_lost(self, loose_fields):
        for new_field in loose_fields:
            game.field = new_field
            self.assertEqual(game._check_win('X'), False)

if __name__ == '__main__':
    unittest.main()


